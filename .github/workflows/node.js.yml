# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]  # Node.js versions to test against

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies for server
      run: |
        cd ..
        cd coresync/server
        npm install

    - name: Install dependencies for client
      run: |
        cd ..
        cd coresync/client
        npm install --force

    - name: Run both client and server concurrently
      run: |
        cd ..
        cd coresync
        npm install concurrently --force
        npm run build  # Assuming "concurrently" is set up to build both client and server

    - name: Build both client and server
      run: |
        echo "Building both client and server..."
        cd ..
        cd coresync
        npm run build  # Run both client and server build concurrently

    - name: Check if the build folder is ready
      run: |
        echo "Checking if the build folder exists"
        ls -l coresync/client/build
        # Optionally add more checks like verifying if the build files are correct

    - name: Serve client build for verification (Optional)
      run: |
        cd ..
        cd coresync/client
        npm install -g serve
        serve -s build &  # Run serve in the background to verify deployment locally
        sleep 10  # Wait a little to allow the server to start
        curl -I http://localhost:5000  # Check if it's serving the build correctly

